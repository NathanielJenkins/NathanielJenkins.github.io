{"version":3,"sources":["img/code.svg","img/tree.png","img/course.png","img/ml.svg","img/heatmap.png","img/simulation.svg","img/delay.png","img/model.png","Header.js","Footer.js","CourseMap.js","LyricClassifier.js","Simulation.js","App.js","index.js"],"names":["module","exports","SectionWipes2Styled","styled","div","Header","triggerHook","duration","pin","wrapper","id","className","from","y","to","target","href","src","code","FooterStyled","Footer","InfoStyled","CourseMap","props","treepng","style","color","type","class","course","LyricClassifier","ml","heatmap","sim","delay","model","App","document","title","Fragment","Simulation","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.600009a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.6bd4a33c.svg\";","module.exports = __webpack_public_path__ + \"static/media/tree.e5921559.png\";","module.exports = __webpack_public_path__ + \"static/media/course.83d411fe.png\";","module.exports = __webpack_public_path__ + \"static/media/ml.5cc141d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/heatmap.ab59deaa.png\";","module.exports = __webpack_public_path__ + \"static/media/simulation.3cdd4621.svg\";","module.exports = __webpack_public_path__ + \"static/media/delay.a52e5a5b.png\";","module.exports = __webpack_public_path__ + \"static/media/model.66c32700.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Controller, Scene } from \"react-scrollmagic\";\nimport { Tween, Timeline } from \"react-gsap\";\nimport code from \"./img/code.svg\";\n\nconst SectionWipes2Styled = styled.div`\n  overflow: hidden;\n  #pinContainer {\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n  }\n  #pinContainer .panel {\n    height: inherit;\n    width: inherit;\n    position: absolute;\n    text-align: center;\n  }\n  .panel span {\n    top: calc(50% - 80px);\n    color: white;\n\n    position: relative;\n    display: block;\n\n    &.display-1 {\n      font-weight: 100;\n      letter-spacing: 5px;\n    }\n    &.display-3 {\n      font-weight: 200;\n    }\n  }\n\n  .panel.blue {\n    background: #141e30; /* fallback for old browsers */\n    background: -webkit-linear-gradient(\n      to right,\n      #243b55,\n      #141e30\n    ); /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(\n      to right,\n      #243b55,\n      #141e30\n    ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  }\n\n  .panel.turqoise {\n    background-color: #38ced7;\n  }\n\n  .panel.orange {\n    background-color: orange;\n  }\n\n  .thin {\n    font-weight: 200;\n    font-size: 40px;\n  }\n`;\n\nconst Header = () => (\n  <SectionWipes2Styled>\n    <Controller>\n      <Scene triggerHook=\"onLeave\" duration={800} pin>\n        <Timeline wrapper={<div id=\"pinContainer\" />}>\n          <section className=\"panel blue\">\n            <span className=\"display-1\">Hello.</span>\n\n            <span>\n              <p className=\"lead\">Nathan Jenkins</p>\n            </span>\n          </section>\n          <Tween from={{ y: \"100%\" }} to={{ y: \"0%\" }}>\n            <section className=\"panel turqoise\">\n              <span className=\"display-3\">My Projects</span>\n              <span className=\"display-4 thin\">\n                <a target=\"_blank\" href=\"https://github.com/NathanielJenkins/\">\n                  Github\n                </a>\n              </span>\n              <div className=\"container\">\n                <img className=\"p-4 img-fluid\" src={code}></img>\n              </div>\n            </section>\n          </Tween>\n          <Tween from={{ y: \"-100%\" }} to={{ y: \"0%\" }}>\n            <section className=\"panel orange\">\n              <span className=\"display-3\">Course Map</span>\n              <span className=\"display-4 thin\">\n                Builds a tree of pre reqs for a given course\n              </span>\n            </section>\n          </Tween>\n        </Timeline>\n      </Scene>\n    </Controller>\n  </SectionWipes2Styled>\n);\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterStyled = styled.div`\n\tposition: relative;\n\tcolor: white;\n\theight: 20vh;\n\twidth: 100vw;\n\toverflow: hidden;\n\tbackground: #232526; /* fallback for old browsers */\n\n\t.cc {\n\t\tposition: absolute;\n\t\tbottom: 0;\n        right: 0;\n        padding 1%; \n        color: grey; \n\t}\n`;\n\nconst Footer = () => {\n\treturn (\n\t\t<FooterStyled>\n\t\t\t<div className=\"cc\">Nathan Jenkins-Boale</div>\n\t\t</FooterStyled>\n\t);\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport treepng from \"./img/tree.png\";\nimport course from \"./img/course.png\";\n\nconst InfoStyled = styled.div`\n  overflow: hidden;\n`;\n\nconst CourseMap = props => {\n  return (\n    <InfoStyled>\n      <div className=\"dark_mode\">\n        <div className=\"container\">\n          <div className=\"row p-4\">\n            <div className=\"col-md-8 mx-auto \">\n              <img\n                className=\"mb-2 img-fluid rounded shadow-lg\"\n                src={treepng}\n              ></img>\n            </div>\n\n            <div className=\"col-md-4\">\n              <h3 style={{ color: \"orange\" }}>Overview</h3>\n              <p>\n                This website was created by scrapping the uvic course site with\n                beautiful and creating a database of dependencies. There are\n                three tables in the database, course, operations and\n                precombinations. Courses may have many types of operations and\n                operations may have many of different courses.\n              </p>\n              <div className=\"btn-group btn-block\">\n                <a\n                  href=\"https://coursemap.herokuapp.com/\"\n                  type=\"button\"\n                  class=\"btn btn-outline-light\"\n                  target=\"_blank\"\n                >\n                  Live Site\n                </a>\n                <a\n                  href=\"https://github.com/NathanielJenkins/Course_Map\"\n                  type=\"button\"\n                  class=\"btn btn-outline-light\"\n                  target=\"_blank\"\n                >\n                  Github Source\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"row p-4\">\n            <div className=\"col\">\n              <h4 style={{ color: \"orange\" }}>Database Schema</h4>\n\n              <p>\n                The database has three tables, courses, operations and\n                precombinations. They are related by the following example The\n                course CSC 361 has two direct operations. Single course with\n                SENG 265 and One of CSC 230, CENG 255 ECE 255. Each of these\n                course have one or many operations, who have one or many\n                precombination courses\n              </p>\n            </div>\n          </div>\n          <div className=\"row p-4\">\n            <div class=\"col-md-6\">\n              <h4 style={{ color: \"orange\" }}>Web Scrapping</h4>\n\n              <p>\n                The database was created by scrapping the UVIC course website.\n                It goes through each faculty and then each course where it\n                stores the prereq information in a JSON file. The JSON file\n                later further processed to create the database.\n              </p>\n\n              <a\n                href=\"https://github.com/NathanielJenkins/Course_Map/blob/master/uvic/webScraper.py\"\n                type=\"button\"\n                class=\"btn btn-outline-light btn-block\"\n                target=\"_blank\"\n              >\n                Webscrapping Source\n              </a>\n            </div>\n            <div className=\"col-md-6\">\n              <img className=\"img-fluid rounded shadow-lg\" src={course}></img>\n            </div>\n          </div>\n        </div>\n      </div>\n    </InfoStyled>\n  );\n};\n\nexport default CourseMap;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Controller, Scene } from \"react-scrollmagic\";\nimport { Tween, Timeline } from \"react-gsap\";\nimport ml from \"./img/ml.svg\";\nimport heatmap from \"./img/heatmap.png\";\n\nconst SectionWipes2Styled = styled.div`\n  overflow: hidden;\n  #pinContainer {\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n  }\n  #pinContainer .panel {\n    height: inherit;\n    width: inherit;\n    position: absolute;\n    text-align: center;\n  }\n  .panel span {\n    top: calc(50% - 80px);\n    color: white;\n\n    position: relative;\n    display: block;\n\n    &.display-1 {\n      font-weight: 100;\n      letter-spacing: 5px;\n    }\n    &.display-3 {\n      font-weight: 200;\n    }\n  }\n\n  .panel.green {\n    background-color: Teal;\n  }\n  .panel.salmon {\n    background-color: salmon;\n  }\n  .img-container {\n  }\n  h3,\n  h4 {\n    color: salmon;\n  }\n  p {\n    color: darkslategrey;\n  }\n`;\n\nconst LyricClassifier = () => (\n  <SectionWipes2Styled>\n    <Controller>\n      <Scene triggerHook=\"onLeave\" duration={800} pin>\n        <Timeline wrapper={<div id=\"pinContainer\" />}>\n          <section className=\"panel green\">\n            <span className=\"display-3\">Machine Learning</span>\n            <div className=\"img-container\">\n              <img className=\"p-4 img-fluid\" src={ml}></img>\n            </div>\n          </section>\n          <Tween from={{ y: \"-100%\" }} to={{ y: \"0%\" }}>\n            <section className=\"panel salmon\">\n              <span className=\"display-4\">Genre Classification By Lyrics</span>\n            </section>\n          </Tween>\n        </Timeline>\n      </Scene>\n    </Controller>\n    <div className=\"light_mode\">\n      <div className=\"container\">\n        <div className=\"row p-4\">\n          <div className=\"col-md-4\">\n            <h3>Overview</h3>\n            <p>\n              This report serves to identify if there exists a link between the\n              lyrics of a song and genre that the song belongs to. The notebook\n              will analyses the effectiveness of different machine learning\n              techniques, algorithms and natural language processing tools to\n              determine the correlation between lyrics and musical genres.\n            </p>\n            <div className=\"btn-group btn-block\">\n              <a\n                href=\"https://github.com/NathanielJenkins/LyricGenreClassifier/blob/final/project.ipynb\"\n                type=\"button\"\n                class=\"btn btn-outline-dark\"\n                target=\"_blank\"\n              >\n                Jupyter Notebook\n              </a>\n              <a\n                href=\"https://github.com/NathanielJenkins/LyricGenreClassifier\"\n                type=\"button\"\n                class=\"btn btn-outline-dark\"\n                target=\"_blank\"\n              >\n                Github Source\n              </a>\n            </div>\n          </div>\n          <div className=\"col-md-8\">\n            <img className=\"img-fluid rounded shadow-lg\" src={heatmap}></img>\n          </div>\n        </div>\n        <div className=\"row p-4\">\n          <div className=\"col-md-8\">\n            <h4>Introduction</h4>\n            <p>\n              Online streaming platforms like Apple Music and Spotify add new\n              songs to their collection daily. Each platform gives users the\n              ability to listen to and download millions unique of songs. These\n              songs are catalogued and categorized so that music listeners may\n              find new songs that match their unique tastes. Organizing songs by\n              genre is an old and familiar technique to categorize music and\n              make it easier for listeners to find songs they like. To classify\n              songs into genres manually, someone would need to listen to it and\n              select the genre that best applies. This is hard and very\n              time-consuming job. They would require a knowledge of many\n              different genres, types of music and the nuances between them.\n              Machine learning and text lyric analysis can aid in this pursuit.\n            </p>\n          </div>\n          <div className=\"col-md-4\">\n            <h4>Future Improvements</h4>\n            <p>\n              Using actual music as input, in addtion to lyrics would be\n              interesting to see how the algorithms improve. Futhermore, better\n              defining what the boundaries of genres by subdividing songs into\n              decades\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </SectionWipes2Styled>\n);\n\nexport default LyricClassifier;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Controller, Scene } from \"react-scrollmagic\";\nimport { Tween, Timeline } from \"react-gsap\";\nimport sim from \"./img/simulation.svg\";\nimport delay from \"./img/delay.png\";\nimport model from \"./img/model.png\";\n\nconst SectionWipes2Styled = styled.div`\n  overflow: hidden;\n  #pinContainer {\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n  }\n  #pinContainer .panel {\n    height: inherit;\n    width: inherit;\n    position: absolute;\n    text-align: center;\n  }\n  .panel span {\n    top: calc(50% - 80px);\n    color: white;\n\n    position: relative;\n    display: block;\n\n    &.display-1 {\n      font-weight: 100;\n      letter-spacing: 5px;\n    }\n    &.display-3 {\n      font-weight: 200;\n    }\n    &.display-4 {\n      color: darkslategrey;\n    }\n  }\n\n  .panel.green {\n    background-color: darkseagreen;\n  }\n  .panel.lavender {\n    background-color: lavender;\n  }\n  .img-container {\n  }\n  h3,\n  h4 {\n    color: cadetblue;\n  }\n  p {\n    color: darkslategrey;\n  }\n`;\n\nconst LyricClassifier = () => (\n  <SectionWipes2Styled>\n    <Controller>\n      <Scene triggerHook=\"onLeave\" duration={800} pin>\n        <Timeline wrapper={<div id=\"pinContainer\" />}>\n          <section className=\"panel green\">\n            <span className=\"display-3\">Simulation</span>\n            <div className=\"img-container\">\n              <img className=\"p-4 img-fluid\" src={sim}></img>\n            </div>\n          </section>\n          <Tween from={{ y: \"-100%\" }} to={{ y: \"0%\" }}>\n            <section className=\"panel lavender\">\n              <span className=\"display-4\">\n                Priority Queueing to Alleviate Packet Re-ordering Problem\n              </span>\n            </section>\n          </Tween>\n        </Timeline>\n      </Scene>\n    </Controller>\n    <div className=\"light_mode\">\n      <div className=\"container\">\n        <div className=\"row p-4\">\n          <div className=\"col-md-4\">\n            <h3>Overview</h3>\n            <p>\n              This project investigates the extent that the inclusion of a\n              priority queue in an intermediary router helps mitigate the\n              problem of packets reordering from the source to the destination\n              in a system.\n            </p>\n            <div className=\"btn-group btn-block\">\n              <a\n                href=\"https://github.com/NathanielJenkins/SimulationProject/blob/master/Report%20Project.pdf\"\n                type=\"button\"\n                class=\"btn btn-outline-dark\"\n                target=\"_blank\"\n              >\n                Project Report\n              </a>\n              <a\n                href=\"https://github.com/NathanielJenkins/SimulationProject\"\n                type=\"button\"\n                class=\"btn btn-outline-dark\"\n                target=\"_blank\"\n              >\n                Github Source\n              </a>\n            </div>\n          </div>\n          <div className=\"col-md-8\">\n            <img className=\"img-fluid rounded shadow border\" src={delay}></img>\n          </div>\n        </div>\n        <div className=\"row p-4\">\n          <div className=\"col-md-6\">\n            <img className=\"img-fluid\" src={model}></img>\n          </div>\n          <div className=\"col-md-6\">\n            <h4>Description</h4>\n            <p>\n              The two simulation models were evaluated with the following\n              specification and details.\n            </p>\n            <h6>System 1 Packet Ordering</h6>\n            <p>\n              System 1 Packet Ordering: The system uses two queues marked high\n              and low. An incoming packet is marked as inorder if the router\n              current sequence number is less than the incoming packet sequence\n              and placed into the low priority queue. The incoming packet is\n              marked as out of order if the router current sequence number is\n              greater than the incoming packet and placed into the high queue.\n              The packets are ordered within the respective queues according to\n              a FIFO.\n            </p>\n            <h6>System 2 Packet Ordering</h6>\n            <p>\n              An incoming packet will be placed into the single queue and will\n              be served according to a FIFO strategy.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </SectionWipes2Styled>\n);\n\nexport default LyricClassifier;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CourseMap from \"./CourseMap\";\nimport LyricClassifier from \"./LyricClassifier\";\nimport Simulation from \"./Simulation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    document.title = \"Nathan Jenkins-Boale\";\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <CourseMap />\n        <Simulation />\n        <LyricClassifier />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}